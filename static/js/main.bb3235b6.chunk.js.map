{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css"],"names":["module","exports","superInput","errorInput","error","default","red","checkbox","spanClassName","App","blue","column","Header","react_default","a","createElement","Message","props","className","MessageStyles","message","ava","src","avatar","block","name","message_text","time","messageData","HW1","h1_Message","Affair","affair","onClick","deleteAffairCallback","_id","priority","Affairs","mappedAffairs","data","map","h2_Affair","key","setFilter","defaultAffairs","filterAffairs","affairs","filter","el","deleteAffair","HW2","_useState","useState","_useState2","Object","slicedToArray","setAffairs","_useState3","_useState4","filteredAffairs","h2_Affairs","Greeting","_ref","setNameCallback","addUser","totalUsers","inputClass","s","someClass","buttonClass","buttError","buttClass","main","value","onChange","users","GreetingContainer","addUserCallback","setName","setError","length","h3_Greeting","e","currentTarget","alert","concat","HW3","setUsers","h3_GreetingContainer","toConsumableArray","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","restProps","objectWithoutProperties","finalSpanClassName","finalInputClassName","Fragment","assign","SuperButton","finalClassName","SuperCheckbox","onChangeChecked","children","checked","HW4","text","setText","showAlert","setChecked","c1_SuperInputText_SuperInputText","c2_SuperButton_SuperButton","c3_SuperCheckbox_SuperCheckbox","PreJunior","h1_HW1","h2_HW2","h3_HW3","h4_HW4","Error404","Routes","react_router","path","exact","render","to","pages_PreJunior","pages_Error404","HW5","react_router_dom","h5_Header","h5_Routes","h5_HW5","Boolean","window","location","hostname","match","ReactDOM","StrictMode","u1_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,WAAA,mCAAAC,WAAA,mCAAAC,MAAA,mDCAlBJ,EAAAC,QAAA,CAAkBI,QAAA,6BAAAC,IAAA,8CCAlBN,EAAAC,QAAA,CAAkBM,SAAA,gCAAAC,cAAA,0DCAlBR,EAAAC,QAAA,CAAkBQ,IAAA,sCCAlBT,EAAAC,QAAA,CAAkBS,KAAA,kBAAAC,OAAA,oLCUHC,MATf,WACI,OACIC,EAAAC,EAAAC,cAAA,sDCuBOC,MAhBf,SAAiBC,GACb,OACIJ,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAcC,SAE1BP,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAcE,KAC1BR,EAAAC,EAAAC,cAAA,OAAKO,IAAKL,EAAMM,UAEpBV,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAcK,OAC1BX,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAcM,MAAOR,EAAMQ,MAC3CZ,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAcO,cAAeT,EAAMG,SACnDP,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAcQ,MAAOV,EAAMU,SCjBrDC,EAAc,CAChBL,OAAQ,sMACRE,KAAM,YACNL,QAAS,YACTO,KAAM,SA0BKE,MAvBf,WACI,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WADJ,cAMIF,EAAAC,EAAAC,cAACe,EAAD,CACIP,OAAQK,EAAYL,OACpBE,KAAMG,EAAYH,KAClBL,QAASQ,EAAYR,QACrBO,KAAMC,EAAYD,OAGtBd,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,oBCHGgB,MAjBf,SAAgBd,GAGZ,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAOE,EAAMe,OAAOP,MACpBZ,EAAAC,EAAAC,cAAA,UAAQkB,QALO,WAAOhB,EAAMiB,qBAAqBjB,EAAMe,OAAOG,OAK9D,KAEAtB,EAAAC,EAAAC,cAAA,YAAOE,EAAMe,OAAOI,SAApB,eCoBGC,MA3Bf,SAAiBpB,GACb,IAAMqB,EAAgBrB,EAAMsB,KAAKC,IAAI,SAAC1B,GAAD,OACjCD,EAAAC,EAAAC,cAAC0B,EAAD,CACIC,IAAK5B,EAAEqB,IACPH,OAAQlB,EACRoB,qBAAsBjB,EAAMiB,yBASpC,OACIrB,EAAAC,EAAAC,cAAA,WAEKuB,EAEDzB,EAAAC,EAAAC,cAAA,UAAQkB,QAVD,WAAOhB,EAAM0B,UAAU,SAU9B,OACA9B,EAAAC,EAAAC,cAAA,UAAQkB,QAVA,WAAOhB,EAAM0B,UAAU,UAU/B,QACA9B,EAAAC,EAAAC,cAAA,UAAQkB,QAVE,WAAOhB,EAAM0B,UAAU,YAUjC,UACA9B,EAAAC,EAAAC,cAAA,UAAQkB,QAVD,WAAOhB,EAAM0B,UAAU,SAU9B,SClBNC,EAAoC,CACtC,CAACT,IAAK,EAAGV,KAAM,QAASW,SAAU,QAClC,CAACD,IAAK,EAAGV,KAAM,QAASW,SAAU,OAClC,CAACD,IAAK,EAAGV,KAAM,QAASW,SAAU,OAClC,CAACD,IAAK,EAAGV,KAAM,OAAQW,SAAU,QACjC,CAACD,IAAK,EAAGV,KAAM,aAAcW,SAAU,WAI9BS,EAAgB,SAACC,EAA4BC,GACtD,MAAe,QAAXA,EAAyBD,EACd,QAAXC,EAAyBD,EAAQC,OAAO,SAAAC,GAAE,MAAoB,QAAhBA,EAAGZ,WACtC,SAAXW,EAA0BD,EAAQC,OAAO,SAAAC,GAAE,MAAoB,SAAhBA,EAAGZ,WACvC,WAAXW,EAA4BD,EAAQC,OAAO,SAAAC,GAAE,MAAoB,WAAhBA,EAAGZ,WACjDU,GAIEG,EAAe,SAACH,EAA4BX,GACrD,OAAOW,EAAQC,OAAO,SAAAC,GAAE,OAAIA,EAAGb,MAAQA,KAgC5Be,MA3Bf,WAAe,IAAAC,EACmBC,mBAA4BR,GAD/CS,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACJL,EADIO,EAAA,GACKG,EADLH,EAAA,GAAAI,EAEiBL,mBAAqB,OAFtCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEJV,EAFIW,EAAA,GAEIf,EAFJe,EAAA,GAILC,EAAkBd,EAAcC,EAASC,GAG/C,OACIlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WADJ,cAKIF,EAAAC,EAAAC,cAAC6C,EAAD,CACIrB,KAAMoB,EACNhB,UAAWA,EACXT,qBAXiB,SAACC,GAAD,OAAiBqB,EAAWP,EAAaH,EAASX,OAcvEtB,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,qCC/BG8C,EAjB+B,SAAAC,GAEzC,IADArC,EACAqC,EADArC,KAAMsC,EACND,EADMC,gBAAiBC,EACvBF,EADuBE,QAAS5D,EAChC0D,EADgC1D,MAAO6D,EACvCH,EADuCG,WAElCC,EAAyB,KAAV9D,EAAgB+D,IAAE/D,MAAQ+D,IAAEC,UAC3CC,EAA0B,KAAVjE,EAAgB+D,IAAEG,UAAYH,IAAEI,UAEtD,OACI1D,EAAAC,EAAAC,cAAA,OAAKG,UAAWiD,IAAEK,MACd3D,EAAAC,EAAAC,cAAA,SAAO0D,MAAOhD,EAAMiD,SAAUX,EAAiB7C,UAAWgD,IAC1DrD,EAAAC,EAAAC,cAAA,YAAOX,GACPS,EAAAC,EAAAC,cAAA,UAAQG,UAAWmD,EAAapC,QAAS+B,GAAzC,OAEAnD,EAAAC,EAAAC,cAAA,QAAMG,UAAWiD,IAAEQ,OAAnB,iBAAyCV,EAAzC,OCqBGW,EA/BiD,SAAAd,GAA8B,IAA5Ba,EAA4Bb,EAA5Ba,MAAOE,EAAqBf,EAArBe,gBAAqB1B,EAClEC,mBAAiB,IADiDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnF1B,EADmF4B,EAAA,GAC7EyB,EAD6EzB,EAAA,GAAAI,EAEhEL,mBAAiB,IAF+CM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEnFrD,EAFmFsD,EAAA,GAE5EqB,EAF4ErB,EAAA,GAkBpFO,EAAaU,EAAMK,OAEzB,OACInE,EAAAC,EAAAC,cAACkE,EAAD,CACIxD,KAAMA,EACNsC,gBAnBgB,SAACmB,GACrBJ,EAAQI,EAAEC,cAAcV,QAmBpBT,QAjBQ,WACZe,EAAS,IACI,KAATtD,EACAsD,EAAS,2BAETK,MAAK,SAAAC,OAAU5D,EAAV,OACLoD,EAAgBpD,GAChBqD,EAAQ,MAWR1E,MAAOA,EACP6D,WAAYA,aCHTqB,MAzBf,WAAe,IAAAnC,EACeC,mBAA0B,IADzCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACJwB,EADItB,EAAA,GACGkC,EADHlC,EAAA,GAOX,OACIxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WADJ,cAKIF,EAAAC,EAAAC,cAACyE,EAAD,CAAmBb,MAAOA,EAAOE,gBAVjB,SAACpD,GACrB8D,EAAQ,GAAAF,OAAA/B,OAAAmC,EAAA,EAAAnC,CAAKqB,GAAL,CAAY,CAACxC,IAAKuD,cAAMjE,cAW5BZ,EAAAC,EAAAC,cAAA,WAKAF,EAAAC,EAAAC,cAAA,sCC0BG4E,EA3C2C,SAAA7B,GAUrDA,EARG8B,KAQH,IAPGlB,EAOHZ,EAPGY,SAAUmB,EAOb/B,EAPa+B,aACVC,EAMHhC,EANGgC,WAAYC,EAMfjC,EANeiC,QACZ3F,EAKH0D,EALG1D,MACAc,EAIH4C,EAJG5C,UAAWV,EAIdsD,EAJctD,cAERwF,EAEN1C,OAAA2C,EAAA,EAAA3C,CAAAQ,EAAA,+FAeKoC,EAAkB,GAAAb,OAAMlB,IAAE/D,MAAR,KAAAiF,OAAiB7E,GAAgC,IACnE2F,EAAmB,GAAAd,OAAMjF,EAAQ+D,IAAEhE,WAAagE,IAAEjE,WAA/B,KAAAmF,OAA6CnE,GAEtE,OACIL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,KACIvF,EAAAC,EAAAC,cAAA,QAAAuC,OAAA+C,OAAA,CACIT,KAAM,OACNlB,SArBa,SAACQ,GACtBR,GACGA,EAASQ,GAEZW,GAAgBA,EAAaX,EAAEC,cAAcV,QAkBrCqB,WAhBe,SAACZ,GACxBY,GAAcA,EAAWZ,GAEf,UAAVA,EAAExC,KACCqD,GACAA,KAYK7E,UAAWiF,GAEPH,IAEP5F,GAASS,EAAAC,EAAAC,cAAA,QAAMG,UAAWgF,GAAqB9F,uCC3B7CkG,EAhBqC,SAAAxC,GAK/C,IAHGxD,EAGHwD,EAHGxD,IAAKY,EAGR4C,EAHQ5C,UACF8E,EAEN1C,OAAA2C,EAAA,EAAA3C,CAAAQ,EAAA,qBACKyC,EAAc,GAAAlB,OAAM/E,EAAM6D,IAAE7D,IAAM6D,IAAE9D,QAAtB,KAAAgF,OAAiCnE,GAErD,OACIL,EAAAC,EAAAC,cAAA,SAAAuC,OAAA+C,OAAA,CACInF,UAAWqF,GACPP,sBCyBDQ,EAlCyC,SAAA1C,GASnDA,EAPG8B,KAOH,IANGlB,EAMHZ,EANGY,SAAU+B,EAMb3C,EANa2C,gBACVvF,EAKH4C,EALG5C,UACAwF,GAIH5C,EALctD,cAKdsD,EAJG4C,UAEGV,EAEN1C,OAAA2C,EAAA,EAAA3C,CAAAQ,EAAA,8EASKqC,EAAmB,GAAAd,OAAMlB,IAAE5D,SAAR,KAAA8E,OAAoBnE,GAAwB,IAErE,OACIL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,QAAAuC,OAAA+C,OAAA,CACIT,KAAM,WACNlB,SAda,SAACQ,GAEtBuB,GAAmBA,EAAgBvB,EAAEC,cAAcwB,SAEnDjC,GAAYA,EAASQ,IAWbhE,UAAWiF,GAEPH,IAEPU,GAAY7F,EAAAC,EAAAC,cAAA,QAAMG,UAAWiD,IAAE3D,eAAgBkG,KC2B7CE,MA9Df,WAAe,IAAAzD,EACaC,mBAAiB,IAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACJ0D,EADIxD,EAAA,GACEyD,EADFzD,EAAA,GAELjD,EAAQyG,EAAO,GAAK,QACtBvG,IAAMF,EACJ2G,EAAY,WACV3G,GACAgF,MAAM,gFACN9E,GAAM,GAEN8E,MAAMyB,IATHpD,EAcmBL,oBAAkB,GAdrCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAcJkD,EAdIjD,EAAA,GAcKsD,EAdLtD,EAAA,GAiBX,OACI7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WADJ,cAIIF,EAAAC,EAAAC,cAAA,OAAKG,UAAWiD,IAAExD,QAEdE,EAAAC,EAAAC,cAACkG,EAAD,CACIxC,MAAOoC,EACPhB,aAAciB,EACdf,QAASgB,EACT3G,MAAOA,IAKXS,EAAAC,EAAAC,cAACmG,EAAD,CACI5G,IAAKA,EACL2B,QAAS8E,GAFb,mBAQAlG,EAAAC,EAAAC,cAACoG,EAAD,CACIR,QAASA,EACTF,gBAAiBO,GAFrB,cAQAnG,EAAAC,EAAAC,cAACoG,EAAD,CAAeR,QAASA,EAASjC,SAlCxB,SAACQ,GAAD,OAAsC8B,EAAW9B,EAAEC,cAAcwB,aAqC9E9F,EAAAC,EAAAC,cAAA,WAKAF,EAAAC,EAAAC,cAAA,aC5CGqG,MAbf,WACI,OACIvG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAD,QCAGC,MAVf,WACI,OACI5G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,iECwBG2G,MArBf,WACI,OACI7G,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KAIA9G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAMjH,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAUI,GAAI,mBAEpDlH,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,KAAM,cAAeE,OAAQ,kBAAMjH,EAAAC,EAAAC,cAACiH,EAAD,SAN1C,gBAUAnH,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOG,OAAQ,kBAAMjH,EAAAC,EAAAC,cAACkH,EAAD,oBCJlBC,MAff,WACI,OACIrH,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KAEAtH,EAAAC,EAAAC,cAACqH,EAAD,MAEAvH,EAAAC,EAAAC,cAACsH,EAAD,SCOG5H,MAdf,WACI,OACII,EAAAC,EAAAC,cAAA,OAAKG,UAAWiD,IAAE1D,KACdI,EAAAC,EAAAC,cAAA,+BAKAF,EAAAC,EAAAC,cAACuH,EAAD,QCFQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASd,OACLjH,EAAAC,EAAAC,cAACF,EAAAC,EAAM+H,WAAP,KACIhI,EAAAC,EAAAC,cAAC+H,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAnJ,GACLoJ,QAAQpJ,MAAMA,EAAMgB,8BEhJ5BpB,EAAAC,QAAA,CAAkBmB,QAAA,yBAAAC,IAAA,qBAAAK,aAAA,8BAAAD,KAAA,sBAAAE,KAAA,sBAAAH,MAAA,2CCAlBxB,EAAAC,QAAA,CAAkBuE,KAAA,uBAAAD,UAAA,4BAAAD,UAAA,4BAAAF,UAAA,4BAAAhE,MAAA,wBAAAuE,MAAA","file":"static/js/main.bb3235b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3TbHj\",\"errorInput\":\"SuperInputText_errorInput__3N2Y3\",\"error\":\"SuperInputText_error__1yMP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2v4c0\",\"red\":\"SuperButton_red__vi4gF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__30uQh\",\"spanClassName\":\"SuperCheckbox_spanClassName__26-tW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__nDpgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1sJYS\",\"column\":\"HW4_column__Q5tS_\"};","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport MessageStyles from \"./Message.module.css\"\r\n\r\ntype messageType = {\r\n    avatar: string;\r\n    name: string;\r\n    message: string;\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props: messageType) {\r\n    return (\r\n        <div className={MessageStyles.message}>\r\n\r\n            <div className={MessageStyles.ava}>\r\n                <img src={props.avatar}/>\r\n            </div>\r\n            <div className={MessageStyles.block}>\r\n                <div className={MessageStyles.name}>{props.name}</div>\r\n                <div className={MessageStyles.message_text}>{props.message}</div>\r\n                <div className={MessageStyles.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst messageData = {\r\n    avatar: \"https://styles.redditmedia.com/t5_l676j/styles/profileIcon_snood67ea9d2-25c4-40cf-a521-ee38d4552a54-headshot.png?width=256&height=256&crop=256:256,smart&s=df3c7f9039fcfb795aa90d2ebd85dee338f15850\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType, // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.affair.name}</span>\r\n            <button onClick={deleteCallback}>X</button>\r\n\r\n            <span>{props.affair.priority} priority</span>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>,\r\n    setFilter: (filter: FilterType) => void,\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"   // need to fix any\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === \"all\") return affairs;\r\n    if (filter === \"low\") return affairs.filter(el => el.priority === \"low\");\r\n    if (filter === \"high\") return affairs.filter(el => el.priority === \"high\");\r\n    if (filter === \"middle\") return affairs.filter(el => el.priority === \"middle\");\r\n    return affairs\r\n\r\n    //else return; // need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(el => el._id !== _id)\r\n\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string, // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void, // need to fix any\r\n    addUser: () => void,\r\n    error: string, // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers}\r\n) => {\r\n    const inputClass = !(error === \"\") ? s.error : s.someClass\r\n    const buttonClass = !(error === \"\") ? s.buttError : s.buttClass// не уверен, что (error === \"\") красиво\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button className={buttonClass} onClick={addUser}>add</button>\r\n\r\n            <span className={s.users}> Total Users -{totalUsers}-</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState, ChangeEvent} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>,\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n    };\r\n    const addUser = () => {\r\n        setError(\"\")\r\n        if (name === \"\") {\r\n            setError(\" Enter a name, please \")\r\n        } else {\r\n            alert(`Hello ${name} !`);\r\n            addUserCallback(name);\r\n            setName(\"\")\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string,\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name}]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting*/}\r\n\r\n            {/*/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className  }`; // need to fix with (?:) and s.superInput ? className : \"\"\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n\r\n    onChangeChecked?: (checked: boolean) => void,\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n        onChange && onChange(e)\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    let red = error ? true : false;\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n            red = true\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                     // className={s.blue} // ПРОВЕРИЛ - Работает проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red={red} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    push me gentle {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>OOPS! Something went wrong! Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n            <Route path={\"/\"} exact render={() => <Redirect to={\"/PRE_JUNIOR\"}/>}/>\r\n\r\n            <Route path={\"/PRE_JUNIOR\"} render={() => <PreJunior/>}/>\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2tzbC\",\"ava\":\"Message_ava__2ukri\",\"message_text\":\"Message_message_text__2QL0m\",\"name\":\"Message_name__dsBoy\",\"time\":\"Message_time__3Mvoz\",\"block\":\"Message_block__3Ofxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Greeting_main__3WYsH\",\"buttClass\":\"Greeting_buttClass__Ok7wa\",\"buttError\":\"Greeting_buttError__1pR2T\",\"someClass\":\"Greeting_someClass__3xPKG\",\"error\":\"Greeting_error__1ETuw\",\"users\":\"Greeting_users__2fa4R\"};"],"sourceRoot":""}